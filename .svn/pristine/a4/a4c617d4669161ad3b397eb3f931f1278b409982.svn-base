<template>
  <div class="eventList_wrap">
    <div style="height: 100%;" v-show="flag == 0">
      <!-- <h3 class="eventList_h3">事件管理</h3> -->

      <h3 class="eventList_list_title">
        <span>事件标题</span>
        <span>事发时间</span>
      </h3>

      <div class="eventList_ul_wrap" v-infinite-scroll="scrollLoad" style="overflow: auto;">
        <ul class="eventList_ul">
          <li
            v-for="(item, index) in allListData"
            :key="index"
            @click="bubbling(item, index)"
          >
            <span>{{ item.title }}</span>
            <span>{{ item.time }}</span>
          </li>
        </ul>
      </div>
    </div>

    <div style="height: 100%;" class="particulars_big_wrap" v-show="flag == 1">
      <particulars ref="particulars"></particulars>
    </div>
  </div>
</template>

<script>
import allUrl from "../../../../../assets/api/allApiUrl";
import particulars from "./particulars";
export default {
  name: "eventList",
  data() {
    return {
      flag: 0,
      page: 1,
      totalPage: 1,
      allListData: [],
      map: "",
      preMarker: "",
      preText: ""
    };
  },
  methods: {
    bubbling(item, index, isReturn = false) {
      // 清空上一个事件的覆盖物和搜索结果列表
      if (!isReturn) {
        this.$parent.$refs.resourcesSearch.clearMarker()
      }

      this.flag = 1;
      this.$refs.particulars.init(item);
      let center = [item.longitude, item.latitude];
      this.$store.commit("center", center);
      console.log(this.$store.state.center);
      if (this.preMarker) {
        // this.map.clearMap();
        this.map.remove(this.preMarker);
        this.map.remove(this.preText);
      }
      // this.map.clearMap();
      /**
       * @author tanjinfeng
       * @date 2020-11-13
       * @desc 落点增加点击返回详情的功能
       */
      // *** 原来的代码 ***
      // this.addMck(center, item.title);
      // *** 修改后的代码 ***
      if (center[0] && center[1]) {
        this.addMck(center, item);
      } else {
        this.$message.info('此事件缺少经纬度');
      }
      // *** 结束 ***
      this.$emit("clickEventId", item);
    },
    addMck(center, item) {
      // 落点图标
      let str = require("../../../../../assets/images/cszh/red.png");
      // 背景
      let bgr = require("../../../../../assets/images/cszh/li2.png");
      // 创建一个 Icon
      var startIcon = new AMap.Icon({
        // 图标尺寸
        size: new AMap.Size(40, 40),
        // 图标的取图地址
        image: str,
        // 图标所用图片大小
        imageSize: new AMap.Size(40, 40),
        // 图标取图偏移量
        imageOffset: new AMap.Pixel(0, 0)
      });
      // 将 icon 传入 marker
      var startMarker = new AMap.Marker({
        position: center,
        icon: startIcon,
        offset: new AMap.Pixel(-20, -40)
      });
      // 创建纯文本标记
      var text = new AMap.Text({
        text: item.title,
        anchor: "center", // 设置文本标记锚点
        draggable: false,
        cursor: "pointer",
        style: {
          padding: "0px 15px",
          background: "url(" + bgr + ")no-repeat",
          "background-size": "100% 100%",
          "border-width": 0,
          "text-align": "center",
          "font-size": "16px",
          color: "#ff0000",
          "margin-top": "20px"
        },
        zIndex: 200,
        position: center
      });
      // console.log(text)

      /**
       * @author tanjinfeng 
       * @date 2020-11-13
       * @desc 落点和文字新增点击返回详情
       */
      // *** 开始 ***
      startMarker.on('click', () => {
        this.$parent.$parent.tab({ name: "事件要情", flag: false, index: 0 })
        this.$nextTick(() => {this.bubbling(item, undefined, true)})
      })
      text.on('click', () => {
        this.$parent.$parent.tab({ name: "事件要情", flag: false, index: 0 })
        this.$nextTick(() => {this.bubbling(item, undefined, true)})
      })
      // *** 结束 ***

      text.setMap(this.map);
      // 将 markers 添加到地图
      this.map.add([startMarker]);
      this.preMarker = startMarker;
      this.preText = text;
      this.map.setFitView(startMarker);
    },
    initMap(map) {
      this.map = map;
    },
    getList(type = 2) {
      // visualList
      let data = {
        ...allUrl.visualList,
        params: {
          key: "",
          status: "",
          emergencyType: 2,
          type: "",
          page: this.page,
          limit: 10
        }
      };
      this.apix(data)
        .then(res => {
          this.totalPage = res.page.totalPage
          if (type == 1) {
            this.allListData = res.page.list;
            this.scrollLoad()
          } else {
            let data = this.allListData.concat(res.page.list);
            this.allListData = data;
          }
        })
        .catch(err => {
          console.log(err);
        });
    },

    /**
     * @author tanjinfeng
     * @date 2020-12-02
     * @description 滚动下拉更新数据
     */
    scrollLoad() {
      if (this.page < this.totalPage) {
        this.page += 1
        this.getList()
      }
    },

    addEventList(elestr, page, callback) {
      let _that = this;
      let ele = document.getElementsByClassName(elestr)[0];
      let childrenEle = ele.children[0].children[0];
      childrenEle.addEventListener("scroll", function(e) {
        console.log("到底");
        // 快到底部的时候触发到底事件
        if (
          e.target.scrollTop + e.target.offsetHeight + 20 >=
            e.target.scrollHeight &&
          this.children.length <= 8
        ) {
          _that[page] += 1;
          _that[callback]();
        }
      });
    }
  },
  mounted() {
    this.getList(1);
  },
  updated() {},
  components: {
    particulars
  }
};
</script>

<style scoped>
.eventList_wrap {
  height: 100%;
  display: flex;
  flex-direction: column;
}
h3,
ul,
li {
  padding: 0;
  margin: 0;
}
.eventList_h3 {
  color: #00f2ff;
  text-align: center;
  height: 42px;
  line-height: 42px;
  font-size: 20px;
  background: url("../../../../../assets/images/cszh/tbgr.png") no-repeat;
  background-size: 100% 100%;
}
.eventList_list_title {
  height: 40px;
  color: #fff;
  line-height: 40px;
  display: flex;
  /* margin-top: 30px; */
  background: #17447a;
}
.eventList_list_title > span {
  display: block;
  flex: 1;
  text-align: center;
  font-size: 20px;
  font-weight: 400;
}
.eventList_ul_wrap {
  flex: 1;
  max-height: 588px;
  height: 588px;
}
.eventList_ul {
  color: #c4d6ee;
  list-style: none;
}
.eventList_ul > li {
  display: flex;
  border-bottom: 1px solid #bcd0f7;
  height: 48px;
  line-height: 48px;
}
.eventList_ul > li > span {
  display: block;
  flex: 1;
  text-align: center;
}
.eventList_ul_wrap /deep/ .el-scrollbar__wrap {
  overflow-x: hidden;
}
.eventList_big_wrap,
.particulars_big_wrap {
  height: 100%;
}
</style>
